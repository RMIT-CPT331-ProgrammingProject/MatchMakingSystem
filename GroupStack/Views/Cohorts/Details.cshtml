@using GroupStack.Data
@model GroupStack.Models.Cohort

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Cohort</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CoordinatorId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CoordinatorId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CohortName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CohortName)
        </dd>
        <dt class="col-sm-2">
            Group Size
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MinSize) - @Html.DisplayFor(model => model.MaxSize)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PreferencesDeadline)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PreferencesDeadline)
        </dd>
@if (User.IsInRole(Constants.AdministratorRole) || User.IsInRole(Constants.CoordinatorRole))
{
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.HardDeadline)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.HardDeadline)
        </dd>
}
        <dt class="col-sm-2">
            Assigned Groups
        </dt>
        <dd class="col-sm-10">
            @Model.Groups.Count
        </dd>
    </dl>
</div>
@if (User.IsInRole("Coordinator"))
{
        <h5>Coordinator:</h5>
        <a href="~/Whitelists/Create/@(Model.CohortId)">Assign Students or Mentors to Cohort.</a>
}

@if (Model.Groups.Count == 0)
{
    if (User.IsInRole("Coordinator"))
    {
        <a href="~/Cohorts/Assign/@(Model.CohortId)">Assign Groups.</a>
    }

    if (User.IsInRole("Mentor"))
    {
        <h5>Mentor:</h5>
        <a href="~/Projects/Index/@(Model.CohortId)">Add a project.</a>
    }
    if (User.IsInRole("Student"))
    {
        <h5>Student:</h5>
        <a href="~/Projects/Index/@(Model.CohortId)">View projects.</a>
        @if (ViewData["PreferencesSelected"] == null && (!Model.HardDeadline || DateTime.Compare(DateTime.Now, Model.PreferencesDeadline) < 0))
        {
        <a href="~/Preferences/Create/@(Model.CohortId)">Select your preferences.</a>
        }
        else
        {
        <a href="~/Preferences/">View your preferences.</a>
        }
    }
}
else
{
    <div>
    @foreach (var group in Model.Groups)
    {
        var groupIndex = Model.Groups.IndexOf(group);
        var colourClasses = new string[] {"blue", "yellow", "red"};
        <div class="block">
            <div class="group_no @colourClasses[groupIndex % colourClasses.Length] ">
                @(groupIndex + 1)
            </div>
            <h4>
                @Html.DisplayFor(groupItem => group.GroupName)
            </h4>
@foreach (var member in group.GroupAssignments.OrderBy(g => g.Student.Email))
{
            <img class="gm_img" src="~/img/group_member_0@(group.GroupAssignments.IndexOf(member)%4+1).png" alt="@member.Student.Email" title="@member.Student.Email" />
}
            <p class="action">
                <!--<a asp-area="Groups" asp-action="Details" asp-route-id="@group.GroupId">View</a>-->
                <a href="~/Groups/Details/@group.GroupId">View</a>
            </p>
        </div>
    }
    </div>
}
<div>
    @if (User.IsInRole("Administrator") || User.IsInRole("Coordinator"))
    {
        <span><a asp-action="Edit" asp-route-id="@Model.CohortId">Edit</a> |</span>
    }
    <a asp-action="Index">Back to List</a>
</div>
